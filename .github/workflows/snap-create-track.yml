name: Create Snap Track

on:
  workflow_run:
    workflows: ["PR Build Snap"]
    types:
      - completed
    workflow_dispatch:  # Add this for manual testing

jobs:
  create-track:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      SNAP_NAME: zwave-js-ui
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Snapcraft CLI
        run: |
          sudo snap install snapcraft --classic

      - name: Retrive current tracks, version etc
        id: tracks
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
        run: |
          tracks="$(snapcraft list-tracks zwave-js-ui)"
          echo "all: ${tracks}"
          echo "all=$(echo "${tracks}" | awk 'NR > 1 && $1 ~ /^v/ {print "\""substr($1, 2)"\""}' | paste -sd, - | sed 's/.*/[&]/')" >> $GITHUB_OUTPUT

          echo "default=$(V="$(echo "${tracks}" | grep default | cut -d' ' -f1)" && echo "${V#v}")" >> $GITHUB_OUTPUT
          echo "current=$(V="$(yq '.version' snap/snapcraft.yaml)" && echo "${V#v}" | cut -d'.' -f1,2)" >> $GITHUB_OUTPUT

      - name: Output test
        run: |
          set -x
          all="${{ steps.tracks.outputs.all }}"
          echo "${all}"

          export vd="${{ steps.tracks.outputs.default }}"
          export vc="${{ steps.tracks.outputs.current }}"

          function create_track {
            curl -s -w "\nHTTP_CODE:%{http_code}\n" \
              -X POST "https://snapcraft.io/${SNAP_NAME}/create-track" \
              -H "Cookie: session=${{ secrets.SNAPCRAFT_SESSION_COOKIE }};" \
              -H "Content-Type: application/x-www-form-urlencoded" \
              -H "Origin: https://snapcraft.io" \
              -H "Referer: https://snapcraft.io/${SNAP_NAME}/releases" \
              -H "Content-Type: application/x-www-form-urlencoded" \
              -H "Origin: https://snapcraft.io" \
              -H "Referer: https://snapcraft.io/${SNAP_NAME}/releases" \
              -d "track-name=v${1}"
          }

          if [[ -z "$(echo "${all}" | yq '.. | select(. == env(vc))')" ]]; then
            # create track for vc
            create_track "${vc}"
          fi

          export major="${vc%%.*}"
          export minor="${vc##*.}"

          nvd=$(echo "[$(echo "$all" | yq '.[] | tostring | (select(
            split(".") | .[0] | tonumber <= env(major) and split(".") | .[1] | tonumber < env(minor) or
            split(".") | .[0] | tonumber < env(major)
          ))' -oj | paste -sd,)]" | yq '.[-1]')

          if [ "${nvd}" != "${vc}" -o "${nvd}" != "${vd}" ]; then
            echo "Set new track to ${nvd}"
          else
            echo "NVD is ${nvd}, VD is ${vd}, VC is ${vc}: No new track to set default"
          fi
