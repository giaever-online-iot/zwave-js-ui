name: PR Build Snap

on:
  pull_request:
    branches:
      - main

jobs:
  extract:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.extract.outputs.platforms }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Extract platforms from snapcraft.yaml
        id: extract
        env:
          LAUNCHPAD_CREDENTIALS: ${{ secrets.LAUNCHPAD_CREDENTIALS }}
        run: |
          #echo "platforms=$(yq e '.platforms | keys ' -o=j -I=0 snap/snapcraft.yaml)" >> $GITHUB_OUTPUT
          echo "platforms=$(echo "{'platforms': {'amd64': null}}" | yq e '.platforms | keys ' -o=j -I=0)" >> $GITHUB_OUTPUT

  build:
    needs: extract
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(needs.extract.outputs.platforms) }}
      fail-fast: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
    
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with: 
          # see 
          # https://github.com/tonistiigi/binfmt/issues/215
          # https://bugs.launchpad.net/ubuntu/+source/qemu/+bug/2096782
          image: 'tonistiigi/binfmt:master'

      - name: Build Snap for ${{ matrix.platform }}
        uses: canonical/snapcraft-multiarch-action@v1
        id: snapcraft
        with:
          architecture: ${{ matrix.platform }}

      - name: Get basename of snap package
        id: build
        run: |
          mkdir -p pkg/ && mv -f "${{ steps.snapcraft.outputs.snap }}" "pkg/"
          echo "filename=$(basename "${{ steps.snapcraft.outputs.snap }}")" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.build.outputs.filename }}
          path: ${{ github.workspace }}/pkg

      - name: Persist artifact URL to env
        id: snap
        run: | 
          FINFO="$(FN="${{ steps.build.outputs.filename}}" && echo "${FN%.*}").json"
          echo "${FINFO}"
          echo "{'name': '${{ steps.build.outputs.filename }}', 'url': '${{ steps.upload.outputs.artifact-url }}', 'arch': '${{ matrix.platform }}'}" | yq '.' -oj -I0 > "pkg/${FINFO}"
          echo "finfo=${FINFO}" >> $GITHUB_OUTPUT

      - run: echo "${{ steps.snap.outputs.finfo }}"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.snap.outputs.finfo }}
          path: ${{ github.workspace }}/pkg
          
  post_comment_and_notify:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    steps:
      - name: Download artifacts
        if: ${{ success() }}
        uses: actions/download-artifact@v5
        with:
          path: ./pkg

      - name: Aggregate artifact infos
        if: ${{ success() }}
        id: aggregate
        run: |
          JSONS="$(find ./ -type f -name "*.json")"
          echo "${JSONS}"
          echo "Packages built successfully!" > filelist.md
          for sfi in ${JSONS}; do
            echo "- $(cat "${sfi}" | yq '.arch'): [$(cat "${sfi}" | yq '.name')]($(cat "${sfi}" | yq '.url'))" >> filelist.md
          done

          echo "filelist<<EOF" >> $GITHUB_OUTPUT
          cat filelist.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post success or failure comment
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ success() ? 
              steps.aggregate.outputs.filelist 
            : format(
              'Hey @{}, the build has failed. Please check the build logs and update your PR accordingly.', github.event.pull_request.user.login
            )}}

      - name: Get repo collaborators with write or higher access
        if: ${{ success() }}
        id: get_collaborators
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          collaborators=$(curl -s \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators?per_page=10")
          reviewers=$(echo "$collaborators" | jq -r '.[] | select(.permissions.push == true or .permissions.admin == true or .permissions.maintain == true) | .login' | paste -sd "," -)
          echo "reviewers=$reviewers" >> $GITHUB_OUTPUT

      - name: Assign reviewers on PR
        uses: hkusu/review-assign-action@v1
        with:
          reviewers: ${{ success() ? steps.get_collaborators.outputs.reviewers : "[]" }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

