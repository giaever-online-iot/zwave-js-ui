name: PR Build Snap

on:
  pull_request:
    branches:
      - main

jobs:
  extract:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.extract.outputs.platforms }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Extract platforms from snapcraft.yaml
        id: extract
        env:
          LAUNCHPAD_CREDENTIALS: ${{ secrets.LAUNCHPAD_CREDENTIALS }}
        run: |
          echo "platforms=$(yq e '.platforms | keys ' -o=j -I=0 snap/snapcraft.yaml)" >> $GITHUB_OUTPUT

  build:
    needs: extract
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(needs.extract.outputs.platforms) }}
      fail-fast: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
    
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with: # see 
          # https://github.com/tonistiigi/binfmt/issues/215
          # https://bugs.launchpad.net/ubuntu/+source/qemu/+bug/2096782
          image: 'tonistiigi/binfmt:master'

      - name: Build Snap for ${{ matrix.platform }}
        uses: canonical/snapcraft-multiarch-action@v1
        id: snapcraft
        with:
          architecture: ${{ matrix.platform }}

      - name: Get basename of snap package
        id: build
        run: |
          echo "${{ steps.snapcraft.outputs.snap }}"
          echo "filename=$(basename "${{ steps.snapcraft.outputs.snap }}")" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        id: upload
        with:
          name: ${{ steps.build.outputs.filename }}
          path: ${{ steps.snapcraft.outputs.snap }}

      - name: Persist artifact URL to env
        id: snap
        run: | 
          FINFO="${{ steps.build.outputs.filename }}.finfo"
          echo "{'name': '${{ steps.build.outputs.filename }}', 'url': '${{ steps.upload.outputs.artifact-url }}', 'arch': '${{ matrix.platform}}'}" | yq -oj -I0 > "${FINFO}"
          echo "finfo=$(cat "${FINFO}")" >> $GITHUB_OUTPUT
          echo "finfo_fn=${FINFO}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.snap.outputs.finfo_fn }}
          path: ${{ steps.snap.outputs.finfo }}

          
  post_comment:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts
          
      - name: Aggregate artifact infos
        id: aggregate
        run: |
          echo "Artifacts built:" > artifact-list.md
          for sfi in artifacts/*.snap.finfo; do
            sfn=
            echo "- [$(cat "${sfi}" | yq '.name')]($(cat "${sfi}" | yq '.url')) ("$(cat "${sfi}" | yq '.arch'))" >> artifact-list.md
          done
          echo "filelist<<EOF" >> $GITHUB_OUTPUT
          cat artifact-list.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          cat artifact-list.md
          
      - uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.aggregate.outputs.filelist }}
